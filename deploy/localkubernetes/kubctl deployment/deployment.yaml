# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contoso-website
  labels:
    app: contoso-website
spec:
  replicas: 1
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector: # Define the wrapping strategy
    matchLabels: # Match all pods with the defined labels
      app: contoso-website # Labels follow the `name: value` template
  template: # This is the template of the pod inside the deployment
    metadata:
      name: contoso-website
      labels:
        app: contoso-website
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      #imagePullSecrets:
      #  - name: acr-secret
      containers:
        - name: contoso-website
          image: ledangvu/ledangvu_aks_reactapp:latest
          #image: ledangvu/ledangvu_aks_webapp:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 512
            limits:
              cpu: 250m
              memory: 1024Mi
          ports:
            - containerPort: 3000
        - name: contoso-nodeapi
          image: ledangvu/ledangvu_aks_nodeapi:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 250m
              memory: 1024Mi
          ports:
            - containerPort: 4000

---
## nodeport.yaml
#apiVersion: v1
#kind: Service
#metadata:
# name: contoso-website
# labels:
#   app: contoso-website
#spec:
# type: NodePort
# selector:
#   app: contoso-website
# ports:
#     # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#   - port: 80
#     targetPort: 80
#     # Optional field
#     # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#     nodePort: 30018
